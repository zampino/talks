%slide.title
  %h2
    %a{href: "//github.com/zampino/pastelli"} github.com/zampino/pastelli
  %h3 An Elixir Plug adapter for Elli webserver
  %em.center she comes in colors
  %hr
  %h3 Andrea Amantini
  %h5.center gh: zampino
  %h5.center tw: lo_zampino

%slide
  %h2
    %a{href: "//github.com/elixir-lang/plug#hello-world", target: "_blank"}
      Plug
  %hr
  %p Routing
  %p Composable "pipelined" Middleware
  %p Connection Struct
  %pre
    %code.ruby
      &#37;Plug.Conn{host: "localhost", port: 4000,
      &nbsp;&nbsp;path_info: ["foo", "bar"]..., assigns: &#37;{ ... }, }
  %p Server Adapter

%slide
  %h2 EventSource
  %hr
  %pre
    %code.javascript
      es = new EventSource("//stream/url")
      es.addEventListener "foo", (e)->
      &nbsp;&nbsp;console.log e.type, e.data
      \n
      es.addEventListener "open", onOpen
      es.addEventListener "error", onClose

  %pre
    event: foo\nretry: 6000\nid: a7s6df5\ndata: {\"foo\":\"bar\"}
  %pre
    event: bla\ndata: {\"foo\":\"bar\"}

%slide
  %h2 Server Sent Events with Cowboy adapter
  %hr
  %p 'chunked' connection state + side-effect messaging
  %p
    routing chunked connections
    %a{href: "//enigmatic-cove-7218.herokuapp.com/"} [1]
    %a{href: "//github.com/zampino/pac_plug/blob/master/lib/pac_plug/router.ex#L22", target: "_blank"} [2]
    %a{href: "//github.com/ninenines/cowboy/blob/master/src/cowboy_loop.erl#L87"} [3]
  %p
    %a{href: '//github.com/elixir-lang/plug/issues/228', target: '_blank'}
      chunked connection issues

%slide
  %h2
    %a{href: "//github.com/knutin/elli#features", target: "blank"} Elli
  %hr
  %p
    Simple, robust and performant Erlang web server, Elli
    is a aimed exclusively at building high-throughput, low-latency HTTP APIs ...

%slide
  %h2
    %a{href: "//github.com/zampino/pastelli#usage", target: "blank"}
      Pastelli
  %hr
  %p
    %a{href: "//github.com/zampino/pastelli/blob/master/lib/pastelli/handler.ex#L1", target: "blabk"} Pastelli Handler
    changes chunked response semantic
  %p handles chunked connection closed by client
  %p
    delegates websockets via handover to
    %em elli_websocket
  %p
    extends Plug.Conn and Plug.Router
    %a{href: "//localhost:3000/talsk/pastelli"} [1]
    %a{href: "//localhost:4000/index.html"} [2]
    %a{href: "//zampino.github.io/talks/pastelli"} [3]
    %a{href: "//plugrc.herokuapp.com/index.html"} [4]
    %a{href: "//github.com/zampino/plug_rc/blob/master/lib/plug_rc/router.ex"} [5]

%slide
  %h2 Final Remarks
  %hr
  %p
    %a{href: "//github.com/zampino/remote_control/blob/base/remote_control.rb#L29-L43"}
      %h3 Ruby Sinatra Thin
  %p
    %a{href: "//github.com/zampino/phoenix-on-pastelli#phoenix-on-pastelli"}
      %h3 Phoenix on Pastelli
